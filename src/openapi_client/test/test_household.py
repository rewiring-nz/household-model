# coding: utf-8

"""
    Household savings

    This is the API for a household savings model. You can provide details about a household's energy use, and receive information about the household's potential emissions & cost savings from electrifying their fossil fuel machines, as well as the upfront costs of switching.

    The version of the OpenAPI document: 0.0.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.household import Household  # noqa: E501

class TestHousehold(unittest.TestCase):
    """Household unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Household:
        """Test Household
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Household`
        """
        model = Household()  # noqa: E501
        if include_optional:
            return Household(
                location = 'NORTHLAND',
                occupancy = 2,
                space_heating = 'WOOD',
                water_heating = 'GAS',
                cooktop = 'GAS',
                vehicles = [
                    openapi_client.models.vehicle.Vehicle(
                        fuel_type = 'ELECTRIC', 
                        kms_per_week = 200, 
                        switch_to_ev = True, )
                    ],
                solar = openapi_client.models.solar.Solar(
                    has_solar = True, 
                    size = 7, 
                    install_solar = True, ),
                battery = openapi_client.models.battery.Battery(
                    has_battery = True, 
                    capacity = 13.5, 
                    power_output = 5, 
                    peak_power_output = 7, 
                    install_battery = True, )
            )
        else:
            return Household(
        )
        """

    def testHousehold(self):
        """Test Household"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
